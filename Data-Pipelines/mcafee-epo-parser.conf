input {
    file {
            path => '/usr/share/logstash/logs/epo5.log'
            type => 'mcafee_epo'
            start_position => 'beginning'
            sincedb_path => "/dev/null"
   }
}
#####################################################################################

filter{

        ruby  { code  => '
                      if event.get("message").nil?
                        event.cancel
                      else
                      
                      
                        data = event.get("message")
                                            
                                            
                        logx = data.split(/xml/)[0]
                        logy = data.split(/xml/)[1]
                        
                        
                        filter1=logy.gsub("><","|")
                        filter2=filter1.gsub(">","=")
                        filter3=filter2.gsub("</","|")
                        filter4=filter3.delete("/").delete("\"")
                        
                        
                        #(FOR ORIGINAL MESSAGE)
                        event.set("[original][parced][event]", filter4)
                        
                        
                        #logx (MESSAGE PART 1)
                        event.set("[part]", logx)
                       
                        
                        #logy (MESSAGE PART 2)
                        logy&.split(/></)&.each do |n|
                          
                          #event.set("[xxxxxxxx][log]", log)
                          if /</ =~ n && />/ =~ n && /UTF\-8/ !~ n || false
                            #ans =  n
                            if /IPAddress>/ =~ n && /<\// =~ n || false
                              if l=n&.match(%r{.+>(?<nn>.+)<.+})
                                #puts l[:nn]
                                ans =  l[:nn]
                                event.set("[source][ip]", ans)
                                event.set("[epo][host][ip]", ans)
                              end
                            end
                            
                            if /OSName>/ =~ n && /<\// =~ n || false
                              if l=n&.match(%r{.+>(?<nn>.+)<.+})
                                ans =  l[:nn]
                                event.set("[epo][host][os]", ans)
                              end
                            end
                            if /MachineName>/ =~ n && /<\// =~ n || false
                              if l=n&.match(%r{.+>(?<nn>.+)<.+})
                                ans =  l[:nn]
                                event.set("[epo][host][name]", ans)
                              end
                            end

                            if /UserName>/ =~ n && /<\// =~ n || false
                              if l=n&.match(%r{.+>(?<nn>.+)<.+})
                                ans =  l[:nn]
                                event.set("[epo][user][name]", ans)
                              end
                            end
                            if /RawMACAddress>/ =~ n && /<\// =~ n || false
                              if l=n&.match(%r{.+>(?<nn>.+)<.+})
                                ans =  l[:nn]
                                event.set("[epo][host][mac]", ans)
                              end
                            end
                        
                            if /AnalyzerDetectionMethod>/ =~ n && /<\// =~ n || false
                              if l=n&.match(%r{.+>(?<nn>.+)<.+})
                                ans =  l[:nn]
                                event.set("[epo][analyzer][detection][method]", ans)
                              end
                            end
                            
                            if /ThreatActionTaken>/ =~ n && /<\// =~ n || false
                              if l=n&.match(%r{.+>(?<nn>.+)<.+})
                                ans =  l[:nn]
                                event.set("[threat][action][taken]", ans)
                              end
                            end
                            
                            if /ThreatCategory>/ =~ n && /<\// =~ n || false
                              if l=n&.match(%r{.+>(?<nn>.+)<.+})
                                ans =  l[:nn]
                                event.set("[threat][category]", ans)
                              end
                            end
                            
                            if /ThreatHandled>/ =~ n && /<\// =~ n || false
                              if l=n&.match(%r{.+>(?<nn>.+)<.+})
                                ans =  l[:nn]
                                event.set("[threat][handled]", ans)
                              end
                            end
                            
                            if /ThreatName>/ =~ n && /<\// =~ n || false
                              if l=n&.match(%r{.+>(?<nn>.+)<.+})
                                ans =  l[:nn]
                                event.set("[threat][name]", ans)
                              end
                            end
                            
                            if /ThreatSeverity>/ =~ n && /<\// =~ n || false
                              if l=n&.match(%r{.+>(?<nn>.+)<.+})
                                ans =  l[:nn]
                                event.set("[threat][severity]", ans)
                              end
                            end
                            if /ThreatType>/ =~ n && /<\// =~ n || false
                              if l=n&.match(%r{.+>(?<nn>.+)<.+})
                                ans =  l[:nn]
                                event.set("[threat][type]", ans)
                              end
                            end
                          
                            if /TargetPath>/ =~ n && /<\// =~ n || false
                              if l=n&.match(%r{.+>(?<nn>.+)<.+})
                                ans =  l[:nn]
                                event.set("[target][path]", ans)
                              end
                            end

                            if /TargetFileSize>/ =~ n && /<\// =~ n || false
                              if l=n&.match(%r{.+>(?<nn>.+)<.+})
                                ans =  l[:nn]
                                event.set("[target][file][size]", ans)
                              end
                            end

                            if /TaskName>/ =~ n && /<\// =~ n || false
                              if l=n&.match(%r{.+>(?<nn>.+)<.+})
                                ans =  l[:nn]
                                event.set("[task][name]", ans)
                              end
                            end
                            
                            if /TargetHash>/ =~ n && /<\// =~ n || false
                              if l=n&.match(%r{.+>(?<nn>.+)<.+})
                                ans =  l[:nn]
                                event.set("[target][hash]", ans)
                              end
                            end
                            
                            if /AnalyzerGTIQuery>/ =~ n && /<\// =~ n || false
                              if l=n&.match(%r{.+>(?<nn>.+)<.+})
                                ans =  l[:nn]
                                event.set("[analyzer][gti][query]", ans)
                              end
                            end
                            
                            if /BladeName>/ =~ n && /<\// =~ n || false
                              if l=n&.match(%r{.+>(?<nn>.+)<.+})
                                ans =  l[:nn]
                                event.set("[blade][name]", ans)
                              end
                            end
                            
                            if /TargetFileName>/ =~ n && /<\// =~ n || false
                              if l=n&.match(%r{.+>(?<nn>.+)<.+})
                                ans =  l[:nn]
                                event.set("[target][file][name]", ans)
                              end
                            end
                            
                            if /SourceHostName>/ =~ n && /<\// =~ n || false
                              if l=n&.match(%r{.+>(?<nn>.+)<.+})
                                ans =  l[:nn]
                                event.set("[source][host][name]", ans)
                              end
                            end
                            
                            if /ThreatEventID>/ =~ n && /<\// =~ n || false
                              if l=n&.match(%r{.+>(?<nn>.+)<.+})
                                ans =  l[:nn]
                                event.set("[threat][event][id]", ans)
                              end
                            end
                            
                            if /AgentGUID>/ =~ n && /<\// =~ n || false
                              if l=n&.match(%r{.+>(?<nn>.+)<.+})
                                ans =  l[:nn].delete("{}")
                                event.set("[event][guid]", ans)
                              end
                            end
                            
                            if /NaturalLangDescription>/ =~ n && /<\// =~ n || false
                              if l=n&.match(%r{.+>(?<nn>.+)<.+})
                                ans =  l[:nn]
                                event.set("[natural][lang][description]", ans)
                              end
                            end
                            
                            if /DetectionMessage>/ =~ n && /<\// =~ n || false
                              if l=n&.match(%r{.+>(?<nn>.+)<.+})
                                ans =  l[:nn]
                                event.set("[detection][message]", ans)
                              end
                            end
                            
                            if /EventID>/ =~ n && /<\// =~ n || false
                              if l=n&.match(%r{.+>(?<nn>.+)<.+})
                                ans =  l[:nn]
                                event.set("[event][id]", ans)
                              end
                            end
                            
                            if /AnalyzerName>/ =~ n && /<\// =~ n || false
                              if l=n&.match(%r{.+>(?<nn>.+)<.+})
                                ans =  l[:nn]
                                event.set("[analyzer][name]", ans)
                              end
                            end
                            
                            if /AnalyzerVersion>/ =~ n && /<\// =~ n || false
                              if l=n&.match(%r{.+>(?<nn>.+)<.+})
                                ans =  l[:nn]
                                event.set("[analyzer][version]", ans)
                              end
                            end
                            
                            if /AnalyzerHostName>/ =~ n && /<\// =~ n || false
                              if l=n&.match(%r{.+>(?<nn>.+)<.+})
                                ans =  l[:nn]
                                event.set("[analyzer][hostname]", ans)
                              end
                            end
                            
                            if /AnalyzerDATVersion>/ =~ n && /<\// =~ n || false
                              if l=n&.match(%r{.+>(?<nn>.+)<.+})
                                ans =  l[:nn]
                                event.set("[analyzer][dat][version]", ans)
                              end
                            end
                            
                            if /AnalyzerEngineVersion>/ =~ n && /<\// =~ n || false
                              if l=n&.match(%r{.+>(?<nn>.+)<.+})
                                ans =  l[:nn]
                                event.set("[analyzer][engine][version]", ans)
                              end
                            end
                            
                            if /Analyzer>/ =~ n && /<\// =~ n || false
                              if l=n&.match(%r{.+>(?<nn>.+)<.+})
                                ans =  l[:nn]
                                event.set("[analyzer][analyzer]", ans)
                              end
                            end
                            
                            if /NaturalLangDescription>/ =~ n && /<\// =~ n || false
                              if l=n&.match(%r{.+>(?<nn>.+)<.+})
                                m=l[:nn]
                                m.split("|").each do |n|
                                  if n =~ /=/
                                    #puts n
                                    if /AnalyzerRuleName/ =~ n || false
                                      #puts n
                                      if l=n&.match(%r{=(?<nn>.+)})
                                        ans =  l[:nn]
                                        event.set("[NaturalLangDescription][analyzer][rule][name]", ans)
                                        #puts ans
                                      end
                                    end

                                    if /SourceProcessName/ =~ n || false
                                      #puts n
                                      if l=n&.match(%r{=(?<nn>.+)})
                                        ans =  l[:nn]
                                        event.set("[NaturalLangDescription][source][process][name]", ans)
                                        #puts ans
                                      end
                                    end

                                    if /TargetIPV4/ =~ n || false
                                      #puts n
                                      if l=n&.match(%r{=(?<nn>.+)})
                                        ans =  l[:nn]
                                        event.set("[NaturalLangDescription][target][ipv4]", ans)
                                        #puts ans
                                      end
                                    end

                                     if /ThreatActionTaken/ =~ n || false
                                      #puts n
                                      if l=n&.match(%r{=(?<nn>.+)})
                                        
                                        ans =  l[:nn]
                                        event.set("[NaturalLangDescription][threat][action][taken]", ans)
                                        #puts ans
                                      end
                                    end
                                  end
                                end
                              end
                            end
                            
                            if /SiteName>/ =~ n && /<\// =~ n || false
                              if l=n&.match(%r{.+>(?<nn>.+)<.+})
                                ans =  l[:nn]
                                event.set("[epo][site][name]", ans)
                              end
                            end
                            
                            if /InitiatorType>/ =~ n && /<\// =~ n || false
                              if l=n&.match(%r{.+>(?<nn>.+)<.+})
                                ans =  l[:nn]
                                event.set("[indicator][type]", ans)
                              end
                            end
                            
                            if /InitiatorID>/ =~ n && /<\// =~ n || false
                              if l=n&.match(%r{.+>(?<nn>.+)<.+})
                                ans =  l[:nn]
                                event.set("[indicator][id]", ans)
                              end
                            end
                            
                            if /InitiatorID>/ =~ n && /<\// =~ n || false
                              if l=n&.match(%r{.+>(?<nn>.+)<.+})
                                ans =  l[:nn]
                                event.set("[indicator][id]", ans)
                              end
                            end
                            
                            
                          end
                        end

                      end
'}

grok { match => { "part" => "%{SYSLOGTIMESTAMP:part_timestamp}" } }
date { match => [ "part_timestamp", "MMM dd HH:mm:ss", "MMM  dd HH:mm:ss" ] }
mutate { remove_field => ["host", "path", "part" , "type", "part_timestamp"] }

}



###############################################################################
output {
 stdout {}
 }
